#!/bin/sh
#
# This file is part of OpenMediaVault.
#
# @license   http://www.gnu.org/licenses/gpl.html GPL Version 3
# @author    Volker Theile <volker.theile@openmediavault.org>
# @copyright Copyright (c) 2009-2018 Volker Theile
#
# OpenMediaVault is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# OpenMediaVault is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with OpenMediaVault. If not, see <http://www.gnu.org/licenses/>.

# http://linux.koolsolutions.com/2009/01/30/installing-linux-on-usb-part-4-noatime-and-relatime-mount-options/
# http://techgage.com/article/enabling_and_testing_ssd_trim_support_under_linux
# https://wiki.archlinux.org/index.php/Solid_State_Drives
# http://wiki.ubuntuusers.de/SSD/TRIM
# http://superuser.com/questions/228657/which-linux-filesystem-works-best-with-ssd

set -e
set -x

. /etc/default/openmediavault
. /usr/share/openmediavault/scripts/helper-functions

OMV_FSTAB_MNTOPS_NONROTATIONAL=${OMV_FSTAB_MNTOPS_NONROTATIONAL:-"noatime,nodiratime,discard"}

# Reload udev rules because we are now in a chroot environment. This is
# necessary to load udev rules coming with OpenMediaVault.
udevadm control --reload-rules
udevadm trigger

# Get the mount configuration for the root filesystem.
# {
#   "device": "UUID=199a4bbc-59c9-4a3b-b592-950eaffb2530",
#   "pass": "1",
#   "opts": [
#     "errors=remount-ro"
#   ],
#   "dump": "0",
#   "fstype": "ext4"
# }
fstab=$(salt-call --local --retcode-passthrough --no-color --out=json mount.fstab | \
	jq --compact-output '.[] | ."/"')
fstab_device=$(echo ${fstab} | jq --raw-output '.device')

# Get the root device file or exit immediatelly.
devicefile=$(findfs ${fstab_device})
! omv_is_devicefile "${devicefile}" && exit 0

# Modify rootfs mount options for non-rotational devices, otherwise
# exit immediatelly.
! omv_is_device_nonrotational "${devicefile}" && exit 0

fstab_opts=$(echo ${fstab} | jq --raw-output '.opts | join(",")')
fstab_fstype=$(echo ${fstab} | jq --raw-output '.fstype')
fstab_dump=$(echo ${fstab} | jq --raw-output '.dump')
fstab_pass=$(echo ${fstab} | jq --raw-output '.pass')

# Modify the options and update the fstab entry.
salt-call --local --retcode-passthrough --no-color mount.set_fstab \
	name="/" device="${fstab_device}" fstype="${fstab_fstype}" \
	opts="${OMV_FSTAB_MNTOPS_NONROTATIONAL},${fstab_opts}" \
	dump="${fstab_dump}" pass_num="${fstab_pass}"

exit 0
